apply plugin: 'eclipse-wtp'
apply plugin: 'java'
apply plugin: 'war'
//apply from: 'http://plugins.jasoft.fi/vaadin.plugin?version=0.10.4'
apply from: 'http://plugins.jasoft.fi/vaadin.plugin?version=0.11.0-beta2'
apply plugin: 'com.bmuschko.cargo'


def connectorsFolder = "TBConnectors"
def CARGO = '1.4.17'
def vaadinVersion = '7.6.1'

repositories
{
mavenLocal()
}

buildscript {
	repositories { 
	mavenLocal()
	jcenter() }

	dependencies { classpath 'com.bmuschko:gradle-cargo-plugin:2.2.2' }
}
configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}
sourceSets {
    integrationTest {
        java {
            srcDir file('src/integrationTests/java')
        }
        resources.srcDir file('src/integrationTests/resources')
    }
}




dependencies {

	runtime project(':tbx.core')
	runtime project(':TBConnectors:tbx.connectors.persistance')
	runtime group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.0.1'
	compile 'javax.servlet:javax.servlet-api:3.0.1'

    compile project(':tbx.api')
	compile group:'com.vaadin', name:'vaadin-shared', version:vaadinVersion
	compile group:'com.vaadin', name:'vaadin-shared-deps', version:"1.+"
	compile group:'com.vaadin', name:'vaadin-server', version:vaadinVersion
	compile group:'com.vaadin', name:'vaadin-push', version:vaadinVersion
	compile group:'com.vaadin', name:'vaadin-client-compiled', version:vaadinVersion

			testCompile 'junit:junit:4.12'
			testCompile project(':tbx.testing')
			testCompile  group:'com.vaadin', name:'vaadin-testbench', version:"4.+"
			
}

task serviceLoaderPackaging(type:Copy){
	outputs.upToDateWhen { false }
	from fileTree(sourceSets.main.resources.asPath).files
	into  sourceSets.main.output.classesDir.path + '/META-INF/services'


}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    
    
}

cargo {
	containerId = 'tomcat8x'
	port = 8081
	
	remote {
	 hostname = 'localhost'
	 username = 'admin'
	 password = 'admin'
	 }

	deployable {
		context = project.name
	}

}


//war.dependsOn serviceLoaderPackaging
//test.dependsOn serviceLoaderPackaging

cargoRedeployRemote.dependsOn war
integrationTest.dependsOn cargoRedeployRemote





